# -- coding: utf-8 --
"""Clasificación de clientes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1R1DwxYwG5HdeAiqZmQVch4_h0Cpd3CDg

"""
from ucimlrepo import fetch_ucirepo
import openai

bank_marketing = fetch_ucirepo(id=222)

ORGANIZATION_ID = "org-CEVV0qeRKuGnHn2Xrl7DSKxY"
API_KEY = "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"

entradas = bank_marketing.data.features

openai.organization = ORGANIZATION_ID
openai.api_key = API_KEY


def write_string_to_file(content, file_path):
    try:
        with open(file_path, 'w') as file:
            file.write(content)
        print("String written to file successfully.")
        return file_path
    except Exception as e:
        print(f"Error occurred while writing to file: {e}")
        return None
    
def read_file_to_string(file_path):
    try:
        with open(file_path, 'r') as file:
            content = file.read()
        print("File read successfully.")
        return content
    except Exception as e:
        print(f"Error occurred while reading the file: {e}")
        return None

def append_string_to_file(string_to_append, file_path):
    """
    Appends a string to a file.

    Args:
        file_path (str): The path to the file.
        string_to_append (str): The string to append to the file.
    """
    try:
        # Open the file in append mode ('a' or 'a+')
        with open(file_path, 'a') as file:
            # Append the string to the file
            file.write(string_to_append)
    except Exception as e:
        print(f"An error occurred: {str(e)}")

    
secretPrompt = "Vas a actuar como un asesor financiero, tu trabajo es clasificar el siguiente ejemplo dentro de una de las siguientes campos: Retail Clients, High Net Worth, Corporate Client, SME, Institutional Client y lo vas a describir sin usar las partes sobre el estudio de marketing"

respuesta = openai.ChatCompletion.create(
                    model="gpt-3.5-turbo",
                    messages=[
                        {"role": "system", "content": secretPrompt},
                        {"role": "user", "content": str(entradas.loc[0])}
                    ]
                    )

respString = respuesta["choices"][0]["message"]["content"]
file_path_resumido = "Responses/respuesta.txt"
append_string_to_file(respString, file_path_resumido)
contextOfTheUser = respuesta["choices"][0]["message"]["content"]

consejoFinanciero = openai.ChatCompletion.create(
                    model="gpt-3.5-turbo",
                    messages=[
                        {"role": "system", "content": contextOfTheUser},
                        {"role": "system", "content": "Evita decir que eres una Inteligencia Artificial, evita redirigirlo a un asesor bancario o banco"},
                        {"role": "user", "content": "En el caso de que este cliente quisiera invertir en cetes directo, que es lo que el banco le recomendaría?"}
                    ]
                    )

append_string_to_file(consejoFinanciero["choices"][0]["message"]["content"], "Responses/2doPRompt.txt")

resp = consejoFinanciero["choices"][0]["message"]["content"]


